// <auto-generated />
using CountrysRestApi.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CountrysRestApi.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20210716075346_v2")]
    partial class v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ModelsCountrysRestApi.ModelsDB.Country", b =>
                {
                    b.Property<string>("alpha")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("alpha")
                        .HasColumnType("varchar(2)");

                    b.Property<short>("independent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("independent")
                        .HasColumnType("SMALLINT(2)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("numeric_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("numeric_code")
                        .HasColumnType("int(3)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("alpha")
                        .HasName("alpha");

                    b.ToTable("countries");

                    b.HasData(
                        new
                        {
                            alpha = "MX",
                            independent = (short)1,
                            name = "Mexico",
                            numeric_code = 1
                        },
                        new
                        {
                            alpha = "GT",
                            independent = (short)1,
                            name = "Guatemala",
                            numeric_code = 2
                        },
                        new
                        {
                            alpha = "AX",
                            independent = (short)1,
                            name = "Aland Islands",
                            numeric_code = 3
                        },
                        new
                        {
                            alpha = "DZ",
                            independent = (short)1,
                            name = "Algeria",
                            numeric_code = 4
                        },
                        new
                        {
                            alpha = "AO",
                            independent = (short)1,
                            name = "Angola",
                            numeric_code = 5
                        },
                        new
                        {
                            alpha = "AI",
                            independent = (short)1,
                            name = "Anguilla",
                            numeric_code = 6
                        },
                        new
                        {
                            alpha = "AQ",
                            independent = (short)1,
                            name = "Antarctica",
                            numeric_code = 7
                        },
                        new
                        {
                            alpha = "AR",
                            independent = (short)1,
                            name = "Argentina",
                            numeric_code = 8
                        },
                        new
                        {
                            alpha = "GN",
                            independent = (short)1,
                            name = "Guinea",
                            numeric_code = 9
                        },
                        new
                        {
                            alpha = "HT",
                            independent = (short)1,
                            name = "Haiti",
                            numeric_code = 10
                        },
                        new
                        {
                            alpha = "HN",
                            independent = (short)1,
                            name = "Honduras",
                            numeric_code = 11
                        });
                });

            modelBuilder.Entity("ModelsCountrysRestApi.ModelsDB.Subdivision", b =>
                {
                    b.Property<string>("code")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("code")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("alpha")
                        .IsRequired()
                        .HasColumnName("alpha")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)");

                    b.HasKey("code")
                        .HasName("code");

                    b.ToTable("subdivisions");

                    b.HasData(
                        new
                        {
                            code = "AO-BGO	",
                            alpha = "AO",
                            name = "Bengo"
                        },
                        new
                        {
                            code = "AO-BGU",
                            alpha = "AO",
                            name = "Benguela"
                        },
                        new
                        {
                            code = "AO-BIE",
                            alpha = "AO",
                            name = "Bié"
                        },
                        new
                        {
                            code = "AO-CAB",
                            alpha = "AO",
                            name = "Cabinda"
                        },
                        new
                        {
                            code = "AO-CNN",
                            alpha = "AO",
                            name = "Cunene"
                        });
                });

            modelBuilder.Entity("ModelsCountrysRestApi.ModelsDB.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("password")
                        .HasColumnType("varchar(128)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("role")
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("salt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("salt")
                        .HasColumnType("varchar(36)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("id");

                    b.HasIndex("email")
                        .HasName("IX_EMAIL");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            email = "test@domain.com",
                            password = "CBBCC5FE04B937F376DC38BD824D32397B67FFBE3583747ADDD3058BEEB7264C6A74B826FB2EEB2C4BA9ADDCA3150FAF610822560717B5994489817D27FF0F4C",
                            role = "Admin",
                            salt = "7278f1d5-b52a-4a0e-93b8-f57bad21adba"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
