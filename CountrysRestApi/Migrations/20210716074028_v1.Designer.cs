// <auto-generated />
using CountrysRestApi.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CountrysRestApi.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20210716074028_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ModelsCountrysRestApi.ModelsDB.Country", b =>
                {
                    b.Property<string>("alpha")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("alpha")
                        .HasColumnType("varchar(2)");

                    b.Property<short>("independent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("independent")
                        .HasColumnType("SMALLINT(2)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("numeric_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("numeric_code")
                        .HasColumnType("int(3)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("alpha")
                        .HasName("alpha");

                    b.ToTable("countries");

                    b.HasData(
                        new
                        {
                            alpha = "MX",
                            independent = (short)1,
                            name = "MEXICO",
                            numeric_code = 52
                        });
                });

            modelBuilder.Entity("ModelsCountrysRestApi.ModelsDB.Subdivision", b =>
                {
                    b.Property<string>("code")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("code")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("alpha")
                        .IsRequired()
                        .HasColumnName("alpha")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)");

                    b.HasKey("code")
                        .HasName("code");

                    b.ToTable("subdivisions");
                });

            modelBuilder.Entity("ModelsCountrysRestApi.ModelsDB.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("password")
                        .HasColumnType("varchar(128)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("role")
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("salt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("salt")
                        .HasColumnType("varchar(36)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("id");

                    b.HasIndex("email")
                        .HasName("IX_EMAIL");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
